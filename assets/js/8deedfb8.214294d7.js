"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[556],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var l=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,l,r=function(e,t){if(null==e)return{};var a,l,r={},n=Object.keys(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)a=n[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=l.createContext({}),u=function(e){var t=l.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return l.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),m=u(a),k=r,c=m["".concat(o,".").concat(k)]||m[k]||s[k]||n;return a?l.createElement(c,i(i({ref:t},p),{},{components:a})):l.createElement(c,i({ref:t},p))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,i=new Array(n);i[0]=m;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var u=2;u<n;u++)i[u]=a[u];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}m.displayName="MDXCreateElement"},26437:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>d,toc:()=>o});var l=a(87462),r=(a(67294),a(3905));const n={},i="Changelog",d={type:"mdx",permalink:"/BridgeNet/CHANGELOG",source:"@site/pages/CHANGELOG.md",title:"Changelog",description:"As of v2.0.0, this project now adheres to semver.",frontMatter:{}},o=[{value:"2.0.0",id:"200",level:2},{value:"2.0.0-rc4",id:"200-rc4",level:2},{value:"2.0.0-rc3",id:"200-rc3",level:2},{value:"2.0.0-rc2",id:"200-rc2",level:2},{value:"2.0.0-rc1",id:"200-rc1",level:2},{value:"Changes to be done",id:"changes-to-be-done",level:3},{value:"1.9.9-beta",id:"199-beta",level:2},{value:"1.9.8-beta",id:"198-beta",level:2},{value:"1.9.7-beta",id:"197-beta",level:2},{value:"1.8.7-beta",id:"187-beta",level:2},{value:"1.8.6-beta",id:"186-beta",level:2},{value:"1.8.5-beta",id:"185-beta",level:2},{value:"1.7.5-beta",id:"175-beta",level:2},{value:"1.6.5-beta",id:"165-beta",level:2},{value:"1.5.5-beta",id:"155-beta",level:2},{value:"1.4.5-beta",id:"145-beta",level:2},{value:"1.4.4-beta",id:"144-beta",level:2},{value:"1.4.3-beta",id:"143-beta",level:2},{value:"0.4.3-alpha",id:"043-alpha",level:2},{value:"0.3.3-alpha",id:"033-alpha",level:2},{value:"0.3.2-alpha",id:"032-alpha",level:2},{value:"0.3.1-alpha",id:"031-alpha",level:2},{value:"0.2.1-alpha",id:"021-alpha",level:2},{value:"0.2.0-alpha",id:"020-alpha",level:2},{value:"0.1.0-alpha",id:"010-alpha",level:2}],u={toc:o};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,l.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"changelog"},"Changelog"),(0,r.kt)("p",null,"As of v2.0.0, this project now adheres to semver."),(0,r.kt)("h2",{id:"200"},"2.0.0"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added the separation of client/server middleware in CreateBridgeTree"),(0,r.kt)("li",{parentName:"ul"},"Heavy optimization"),(0,r.kt)("li",{parentName:"ul"},"Thread reuse has been added (client-receive only atm)"),(0,r.kt)("li",{parentName:"ul"},"New property for Bridge objects: NilAllowed."),(0,r.kt)("li",{parentName:"ul"},"Documentation!"),(0,r.kt)("li",{parentName:"ul"},"Typescript port has been updated"),(0,r.kt)("li",{parentName:"ul"},"SerdeLayer now uses attributes rather than StringValue instances")),(0,r.kt)("h2",{id:"200-rc4"},"2.0.0-rc4"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Unpacked arguments on server receive (Thank you @MELON-Om4r)"),(0,r.kt)("li",{parentName:"ul"},"Fixed numerous queue-related bugs"),(0,r.kt)("li",{parentName:"ul"},"Invoke UUIDs are now packed for less network usage (34 bytes -> 18 bytes)"),(0,r.kt)("li",{parentName:"ul"},"The Identifiers function is a closure again"),(0,r.kt)("li",{parentName:"ul"},"Added outbound middleware"),(0,r.kt)("li",{parentName:"ul"},"Added middleware to the client"),(0,r.kt)("li",{parentName:"ul"},"Middleware now passes in the ",(0,r.kt)("inlineCode",{parentName:"li"},"plr")," argument on the server"),(0,r.kt)("li",{parentName:"ul"},"Overall middleware improvements"),(0,r.kt)("li",{parentName:"ul"},"Client-sided improvements w/ connections"),(0,r.kt)("li",{parentName:"ul"},"Added .GetQueue() for debugging purposes"),(0,r.kt)("li",{parentName:"ul"},"General improvements to client receive"),(0,r.kt)("li",{parentName:"ul"},"Temporarily removed warning signals until I can figure out a better way to add them, they're kind of a mess right now."),(0,r.kt)("li",{parentName:"ul"},"Removed config symbols"),(0,r.kt)("li",{parentName:"ul"},"Removed logging features- it turns out I forgot to fully implement them, plus nobody used them."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Removed BridgeNet.Start(), the module now runs when you require it for the first time.")),(0,r.kt)("li",{parentName:"ul"},"Removed :InvokeServer()"),(0,r.kt)("li",{parentName:"ul"},"Removed both dependencies"),(0,r.kt)("li",{parentName:"ul"},"Updated typescript port"),(0,r.kt)("li",{parentName:"ul"},"Fixed Docusaurus dependency- oops.")),(0,r.kt)("h2",{id:"200-rc3"},"2.0.0-rc3"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Multiple :Fire()s can be sent in the same frame"),(0,r.kt)("li",{parentName:"ul"},"Performance improvements"),(0,r.kt)("li",{parentName:"ul"},"Bugfixes w/ SerdesLayer & replication"),(0,r.kt)("li",{parentName:"ul"},"Added more test cases- 2.0.0 should be usable and more stable."),(0,r.kt)("li",{parentName:"ul"},"Fixed invokes")),(0,r.kt)("h2",{id:"200-rc2"},"2.0.0-rc2"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Middleware now is defaulted off if there's nothing in the table"),(0,r.kt)("li",{parentName:"ul"},"Some small improvements"),(0,r.kt)("li",{parentName:"ul"},"Renamed ",(0,r.kt)("inlineCode",{parentName:"li"},"Declare")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"CreateBridgeTree")),(0,r.kt)("li",{parentName:"ul"},"Exposed the typings ",(0,r.kt)("inlineCode",{parentName:"li"},"Bridge"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ClientBridge")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"ServerBridge")," to the user."),(0,r.kt)("li",{parentName:"ul"},"Added ",(0,r.kt)("inlineCode",{parentName:"li"},"Bridge:SetReplicationRate()")),(0,r.kt)("li",{parentName:"ul"},"Started on a better way of doing releases for wally and non-wally. Kinda experimenting right now!")),(0,r.kt)("h2",{id:"200-rc1"},"2.0.0-rc1"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Removed rateManager entirely"),(0,r.kt)("li",{parentName:"ul"},"Removed .CreateIdentifiersFromDictionary()"),(0,r.kt)("li",{parentName:"ul"},"Removed .CreateBridgesFromDictionary()"),(0,r.kt)("li",{parentName:"ul"},"Removed .WhatIsThis()"),(0,r.kt)("li",{parentName:"ul"},"Removed .WaitForBridge()"),(0,r.kt)("li",{parentName:"ul"},"Removed PrintRemotes symbol- it was useless."),(0,r.kt)("li",{parentName:"ul"},"Added GetCompressedIdentifier"),(0,r.kt)("li",{parentName:"ul"},"Added .Declare()"),(0,r.kt)("li",{parentName:"ul"},"Added .Identifiers()"),(0,r.kt)("li",{parentName:"ul"},"Added .GetFromCompressed()"),(0,r.kt)("li",{parentName:"ul"},"Added .GetFromIdentifier()"),(0,r.kt)("li",{parentName:"ul"},"Each BridgeObject now has a variable rate it sends information at. This is by default 60."),(0,r.kt)("li",{parentName:"ul"},"A lot of functions are now modules that return a function"),(0,r.kt)("li",{parentName:"ul"},"Repeat loops are now while loops"),(0,r.kt)("li",{parentName:"ul"},"Renamed serdeLayer to SerdesLayer"),(0,r.kt)("li",{parentName:"ul"},"Optimizations"),(0,r.kt)("li",{parentName:"ul"},"Symbols are now loaded in via a module"),(0,r.kt)("li",{parentName:"ul"},"Added hot reloading support(?)"),(0,r.kt)("li",{parentName:"ul"},"Rewrote test code")),(0,r.kt)("h3",{id:"changes-to-be-done"},"Changes to be done"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Remove receive queueing"),(0,r.kt)("li",{parentName:"ul"},"Typings should use ",(0,r.kt)("inlineCode",{parentName:"li"},"never")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"unknown")," types"),(0,r.kt)("li",{parentName:"ul"},"Add :SetReplicationRate(). There should be a partial implementation already there"),(0,r.kt)("li",{parentName:"ul"},"Finish polishing and testing, then do the full release.")),(0,r.kt)("h2",{id:"199-beta"},"1.9.9-beta"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Functions that rely on .Start will yield until started")),(0,r.kt)("h2",{id:"198-beta"},"1.9.8-beta"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Switched for loops to be generics for consistency. This should help performance."),(0,r.kt)("li",{parentName:"ul"},"Switched time limit to be .5 milliseconds"),(0,r.kt)("li",{parentName:"ul"},"Fixed Bridge:Destroy()?"),(0,r.kt)("li",{parentName:"ul"},"Type improvements")),(0,r.kt)("h2",{id:"197-beta"},"1.9.7-beta"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"BridgeNet.Started has been added"),(0,r.kt)("li",{parentName:"ul"},"Middleware fixes. Should be stable now")),(0,r.kt)("h2",{id:"187-beta"},"1.8.7-beta"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Hotfix for ClientObject:Fire()")),(0,r.kt)("h2",{id:"186-beta"},"1.8.6-beta"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You can now pass nil as parameters")),(0,r.kt)("h2",{id:"185-beta"},"1.8.5-beta"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Added better performance profiling"),(0,r.kt)("li",{parentName:"ul"},"Added ExceededTimeLimit signal"),(0,r.kt)("li",{parentName:"ul"},"Added InternalError signal (Unused for now)"),(0,r.kt)("li",{parentName:"ul"},"Added server-sided middleware (no typescript support yet, sorry ): ","[UNSTABLE]",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added :SetMiddleware()"),(0,r.kt)("li",{parentName:"ul"},"Added :AddMiddleware()"),(0,r.kt)("li",{parentName:"ul"},"Middleware will be added to the client soon enough"))),(0,r.kt)("li",{parentName:"ul"},"Added .CreateIdentifiersFromDictionary"),(0,r.kt)("li",{parentName:"ul"},"Added .WaitForIdentifier, client-sided only."),(0,r.kt)("li",{parentName:"ul"},"ReceiveLogFunction and SendLogFunction are now stable and ready to be used"),(0,r.kt)("li",{parentName:"ul"},"Fixed symbols for roblox-ts(?)"),(0,r.kt)("li",{parentName:"ul"},"Improved typings for Luau"),(0,r.kt)("li",{parentName:"ul"},"Better error handling")),(0,r.kt)("h2",{id:"175-beta"},"1.7.5-beta"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Improved typings for both ts and luau"),(0,r.kt)("li",{parentName:"ul"},"Re-added :Once()"),(0,r.kt)("li",{parentName:"ul"},"Updated dependency versions")),(0,r.kt)("h2",{id:"165-beta"},"1.6.5-beta"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fixed invokes"),(0,r.kt)("li",{parentName:"ul"},"Added documentation for invokes"),(0,r.kt)("li",{parentName:"ul"},"Added .CreateBridgesFromDictionary()"),(0,r.kt)("li",{parentName:"ul"},"Significantly improved / fixed roblox-ts typings")),(0,r.kt)("h2",{id:"155-beta"},"1.5.5-beta"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Added "RemoteFunction"-type API',(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Added ServerBridge:OnInvoke(function() end)"),(0,r.kt)("li",{parentName:"ul"},"Added ClientBridge:InvokeServerAsync(), yields."),(0,r.kt)("li",{parentName:"ul"},"Added ClientBridge:InvokeServer(), returns a promise instead of yielding."))),(0,r.kt)("li",{parentName:"ul"},"Refactored some code to be better-organized."),(0,r.kt)("li",{parentName:"ul"},"Refactored project structure / testing code to allow for dependencies"),(0,r.kt)("li",{parentName:"ul"},"Added Promise as a dependency"),(0,r.kt)("li",{parentName:"ul"},"Added GoodSignal as a dependency")),(0,r.kt)("h2",{id:"145-beta"},"1.4.5-beta"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ported to typescript!")),(0,r.kt)("h2",{id:"144-beta"},"1.4.4-beta"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You no longer need to declare DefaultReceive and DefaultSend- they default to 60."),(0,r.kt)("li",{parentName:"ul"},"Fixed ServerBridge:Destroy()"),(0,r.kt)("li",{parentName:"ul"},"Added print message while waiting for the ClientBridge to be replicated"),(0,r.kt)("li",{parentName:"ul"},"Removed the print statement in OnClientEvent. oops!")),(0,r.kt)("h2",{id:"143-beta"},"1.4.3-beta"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Removed .FromBridge, use .WaitForBridge or .CreateBridge (createbridge returns the existing bridge object if it exists)"),(0,r.kt)("li",{parentName:"ul"},"Configuration object now uses symbols instead of regular strings"),(0,r.kt)("li",{parentName:"ul"},"Added global custom logging support. UNSTABLE, DONT USE IN PRODUCTION"),(0,r.kt)("li",{parentName:"ul"},"Changed some loops to use ipairs instead of pairs"),(0,r.kt)("li",{parentName:"ul"},"Used table.clear instead of tbl = {} for better efficiency"),(0,r.kt)("li",{parentName:"ul"},"Fixed Disconnect"),(0,r.kt)("li",{parentName:"ul"},"Optimizations (thank you @Baileyeatspizza)"),(0,r.kt)("li",{parentName:"ul"},"Fixed ClientBridge breaking if the client's bridge was created before the server created the bridge (thank you evanchan0819)"),(0,r.kt)("li",{parentName:"ul"},"Fixed client-to-server communication only sending the first argument")),(0,r.kt)("h2",{id:"043-alpha"},"0.4.3-alpha"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Connections now spawn a thread, making them yield-safe and error-proof."),(0,r.kt)("li",{parentName:"ul"},"Added .WaitForBridge()"),(0,r.kt)("li",{parentName:"ul"},"Added Roact's Symbol class- not used for now, will be used for .Start configuration in the future."),(0,r.kt)("li",{parentName:"ul"},".CreateBridge() now has the same functionality of .FromBridge()"),(0,r.kt)("li",{parentName:"ul"},"Server now checks for the BridgeObject to exist before trying to run connections. If it doesn't exist, nothing happens.")),(0,r.kt)("h2",{id:"033-alpha"},"0.3.3-alpha"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Hotfix for .CreateIdentifier()")),(0,r.kt)("h2",{id:"032-alpha"},"0.3.2-alpha"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Connections now use pairs instead of ipairs")),(0,r.kt)("h2",{id:"031-alpha"},"0.3.1-alpha"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Better error handling / messages"),(0,r.kt)("li",{parentName:"ul"},"Removed unused function in ServerBridge/ClientBridge."),(0,r.kt)("li",{parentName:"ul"},"Added .CreateUUID(), .PackUUID(), .UnpackUUID(). (ty Pyseph!)"),(0,r.kt)("li",{parentName:"ul"},"Added .DictionaryToTable(), which converts a dictionary into an alphabetically-ordered table."),(0,r.kt)("li",{parentName:"ul"},"Switched .ChildAdded for the client's serdeLayer to be in serdeLayer._start()"),(0,r.kt)("li",{parentName:"ul"},'Switched "Network" documentation to be "BridgeNet"- Network was a working title.'),(0,r.kt)("li",{parentName:"ul"},"Removed one_remote_event from config.")),(0,r.kt)("h2",{id:"021-alpha"},"0.2.1-alpha"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Better error handling and messages"),(0,r.kt)("li",{parentName:"ul"},"Errors during send/receive will not repeat due to failure to clear queue"),(0,r.kt)("li",{parentName:"ul"},"If the queue is blank, it will not send. ")),(0,r.kt)("h2",{id:"020-alpha"},"0.2.0-alpha"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Some optimizations and polishing"),(0,r.kt)("li",{parentName:"ul"},"Added .FromBridge(), which lets you get a Bridge object from wherever."),(0,r.kt)("li",{parentName:"ul"},"Fixed an issue where an unused artifact was being sent, increasing size drastically"),(0,r.kt)("li",{parentName:"ul"},"Fixed multiple documentation mistakes")),(0,r.kt)("h2",{id:"010-alpha"},"0.1.0-alpha"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Initial release")))}p.isMDXComponent=!0}}]);