"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[565],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>u});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(r),u=a,g=m["".concat(c,".").concat(u)]||m[u]||d[u]||l;return r?n.createElement(g,i(i({ref:t},s),{},{components:r})):n.createElement(g,i({ref:t},s))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},89259:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const l={sidebar_position:4},i="Server-Client Example",o={unversionedId:"Server-Client Example",id:"Server-Client Example",title:"Server-Client Example",description:"BridgeNet.Start should always be called first with the table, before creating bridges.",source:"@site/docs/Server-Client Example.md",sourceDirName:".",slug:"/Server-Client Example",permalink:"/BridgeNet/docs/Server-Client Example",draft:!1,editUrl:"https://github.com/ffrostflame/bridgenet/edit/main/docs/Server-Client Example.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Getting Started",permalink:"/BridgeNet/docs/Getting Started"},next:{title:"Client-Server Example",permalink:"/BridgeNet/docs/Client-Server Example"}},c={},p=[{value:"Server",id:"server",level:2},{value:"Client",id:"client",level:2}],s={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"server-client-example"},"Server-Client Example"),(0,a.kt)("p",null,"BridgeNet.Start should always be called first with the table, before creating bridges."),(0,a.kt)("h2",{id:"server"},"Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'name="example.server.lua"',name:'"example.server.lua"'},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\n\nlocal BridgeNet = require(ReplicatedStorage.Packages.BridgeNet)\n\nBridgeNet.Start({})\n\nlocal Remote = BridgeNet.CreateBridge("Remote")\n\nwhile true do\n    Remote:FireAll("Hello, ", "world!") -- Fires to everyone\n    Remote:FireTo(game.Players.Someone, "Hello, ", "someone!") -- Fires to a specific player\n    task.wait(1)\nend\n')),(0,a.kt)("h2",{id:"client"},"Client"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'name="example.client.lua"',name:'"example.client.lua"'},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\n\nlocal BridgeNet = require(ReplicatedStorage.Packages.BridgeNet)\n\nBridgeNet.Start({})\n\nlocal Remote = BridgeNet.CreateBridge("Remote")\n\nRemote:Connect(function(stringA, stringB)\n    print(stringA .. stringB) -- Prints "Hello, someone!"\nend)\n')))}d.isMDXComponent=!0}}]);